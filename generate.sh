#!/usr/local/bin/bash

#Run project using bash 5 above. E.g. [bash ./generate.sh]
clear
echo "Please enter root path"
read -r rootPath
echo "Please enter the root folder name:"
read -r folderName
clear
echo "================================================================================================================="
echo "Selected Path: $rootPath"
echo "Selected Folder: $folderName"
echo "================================================================================================================="

declare -a folders=("index" "list" "ops" "model" "route" "module")

for i in "${folders[@]}"; do
  folderPath="$rootPath/$folderName/$i"
  echo "Module: $folderName Component: $i"
  if [[ "$i" == "index" ]]; then
    mkdir -p "$folderPath"
    echo '<app-module-index [acRoute]="acRoute"></app-module-index>' >"$folderPath/$folderName.$i.component.html"
    echo "import {Component, OnInit} from '@angular/core';import {ActivatedRoute} from '@angular/router';@Component({ selector: 'app-$folderName-$i',templateUrl: './$folderName.$i.component.html',styles: [], standalone: false})export class ${folderName^}IndexComponent implements OnInit {constructor(public acRoute:ActivatedRoute) {}  ngOnInit(): void {}}" >"$folderPath/$folderName.$i.component.ts"
  elif [[ "$i" == "list" ]]; then
    mkdir -p "$folderPath"
    echo $'<div nz-row nzJustify="end">    <div nz-col>        <nz-space><input *nzSpaceItem [(ngModel)]="paginationDto.searchValue" class="search-input-size" nz-input                         placeholder="{{\'app.general.pagination.searchValue\' | translate}}" nzSize="small"/>            <nz-select *nzSpaceItem id="searchSelect" [(ngModel)]="paginationDto.searchField">                <nz-option nzValue="" nzLabel="{{\'app.general.pagination.searchField\' | translate}}"></nz-option>                <nz-option nzValue="id" nzLabel="{{\'app.general.pagination.id\' | translate}}"></nz-option>                <nz-option nzValue="name" nzLabel="{{\'app.general.pagination.name\' | translate}}"></nz-option>                <nz-option nzValue="description"                           nzLabel="{{\'app.general.pagination.description\' | translate}}"></nz-option>            </nz-select>            <button *nzSpaceItem nz-button nzType="primary" nzSize="small" (click)="search()"><i nz-icon                                                                                                 nzType="search"></i>            </button>        </nz-space>    </div></div><app-module-datatable [pageName]="pageName" [paginationDto]="paginationDto"></app-module-datatable>' >"$folderPath/$folderName.$i.component.html"
    echo "import {Component, OnInit} from '@angular/core';import {ListAbstract} from '../../../shared/abstract/list.abstract';import {ActivatedRoute} from '@angular/router';import {CRUDService} from '../../../shared/services/crud.service';import {AlertService} from '../../../shared/services/alert.service';@Component({    selector: 'app-$folderName-$i',    templateUrl: './$folderName.$i.component.html',    styles: [],    standalone: false})export class ${folderName^}ListComponent extends ListAbstract implements OnInit {    constructor(        protected override activatedRoute: ActivatedRoute,        protected override service: CRUDService,        protected override alertService: AlertService    ) {        super(activatedRoute, service, alertService);    }    ngOnInit(): void {        super.init();    }}" >"$folderPath/$folderName.$i.component.ts"
  elif [[ "$i" == "ops" ]]; then
    mkdir -p "$folderPath"
    echo $'<form nz-form [formGroup]="crudForm" (ngSubmit)="createOrUpdate()">    <app-form-general [parentForm]="crudForm" [pageName]="pageName" [crudOps]="crudOps"                      [object]="object"></app-form-general>    <div nz-row>        <div nz-col [nzXs]="24" [nzSm]="12" [nzMd]="12" [nzLg]="12" [nzXl]="8" [nzXXl]="8">        </div>    </div>    <app-form-audit [object]="object" [crudOps]="crudOps"></app-form-audit>    <app-form-submit-buttons [crudOps]="crudOps" [crudForm]="crudForm"></app-form-submit-buttons></form>' >"$folderPath/$folderName.$i.component.html"
    echo "import {Component, OnInit} from '@angular/core';import {OpsAbstract} from '../../../shared/abstract/ops.abstract';import {Router, ActivatedRoute} from '@angular/router';import {CRUDService} from '../../../shared/services/crud.service';import {FormBuilder} from '@angular/forms';import {AppControlService} from '../../../shared/services/app.control.service';import {AlertService} from '../../../shared/services/alert.service';import {CONTROL_DESCRIPTION} from '../../../shared/constant/control.constant';import {APP_NAVIGATION} from '../../../shared/routes/navigation.constant';@Component({    selector: 'app-$folderName-$i',    templateUrl: './$folderName.$i.component.html',    styles: [],    standalone: false})export class ${folderName^}OpsComponent extends OpsAbstract implements OnInit {    constructor(        public override fb: FormBuilder,        public override activatedRoute: ActivatedRoute,        public override crudService: CRUDService,        public override appCtrlService: AppControlService,        public override alertService: AlertService, public override router: Router    ) {        super(fb, activatedRoute, crudService, appCtrlService, alertService, router);    }    ngOnInit(): void {        super.init();        this.crudForm = this.fb.group({            /* exampleField: this.appCtrlService.generateFormControl(CONTROL_DESCRIPTION.input, this.object?.exampleField) */        });    }    override customUpdateValidations(): boolean {        return true;    }    override customCreateValidations(): boolean {        return true;    }    override customPostSuccessOps(): void {    }    override customPostFailureOps(): void {    }}" >"$folderPath/$folderName.$i.component.ts"
  elif [[ "$i" == "model" ]]; then
    mkdir -p "$folderPath"
    echo "import {GenericModelType} from '../../../shared/interfaces/Generic.model.type';export interface I${folderName^} extends GenericModelType {}" >"$folderPath/$folderName.$i.component.ts"
  elif [[ "$i" == "route" ]]; then
    mkdir -p "$folderPath"
    echo "import {NgModule} from '@angular/core';import {RouterModule, Routes} from '@angular/router';import {RouteResolver} from '../../../shared/resolver/route.resolver';import {APP_NAVIGATION} from '../../../shared/routes/navigation.constant';import {${folderName^}IndexComponent} from '../index/$folderName.index.component';import {${folderName^}ListComponent} from '../list/$folderName.list.component';import {${folderName^}OpsComponent} from '../ops/$folderName.ops.component';export const routes: Routes = [ {        path: '',        component: ${folderName^}IndexComponent,        pathMatch: 'prefix',        data: {            pageName: APP_NAVIGATION.$folderName,            title: 'app.page.' + APP_NAVIGATION.$folderName + '.name',            description: 'app.page.' + APP_NAVIGATION.$folderName + '.description',            icon: 'menu'        },        children: [            {                path: '',                component: ${folderName^}ListComponent,                data: {                    pageName: APP_NAVIGATION.$folderName,                    title: 'app.general.button.all',                    crudOps: APP_NAVIGATION.permissions.list                },            },            {                path: APP_NAVIGATION.permissions.add,                component: ${folderName^}OpsComponent,                data: {                    pageName: APP_NAVIGATION.$folderName,                    title: 'app.general.button.add',                    crudOps: APP_NAVIGATION.permissions.add                },  canActivate: [PermissionGuard]          },            {                path: APP_NAVIGATION.permissions.edit + APP_NAVIGATION.resolverParam,                component: ${folderName^}OpsComponent,                data: {                    pageName: APP_NAVIGATION.$folderName,                    title: 'app.general.button.edit',                    crudOps: APP_NAVIGATION.permissions.edit                },                resolve: {                    object: RouteResolver                },  canActivate: [PermissionGuard]          },            {                path: APP_NAVIGATION.permissions.view + APP_NAVIGATION.resolverParam,                component: ${folderName^}OpsComponent,                data: {                    pageName: APP_NAVIGATION.$folderName,                    title: 'app.general.button.view',                    crudOps: APP_NAVIGATION.permissions.view                },                resolve: {                    object: RouteResolver                },  canActivate: [PermissionGuard]          }        ]    }];@NgModule({    imports: [RouterModule.forChild(routes)],    exports: [RouterModule]})export class ${folderName^}RouteModule {}" >"$folderPath/$folderName.$i.module.ts"
  elif [[ "$i" == "module" ]]; then
    echo "import {NgModule} from '@angular/core';import {${folderName^}IndexComponent} from './index/$folderName.index.component';import {${folderName^}ListComponent} from './list/$folderName.list.component';import {${folderName^}OpsComponent} from './ops/$folderName.ops.component';import {${folderName^}RouteModule} from './route/$folderName.route.module';import {SharedModule} from '../../shared/shared.module';@NgModule({  declarations: [${folderName^}IndexComponent, ${folderName^}ListComponent, ${folderName^}OpsComponent],  imports: [    SharedModule,    ${folderName^}RouteModule  ]})export class ${folderName^}Module {}" >"$rootPath/$folderName/$folderName.$i.ts"
  else
    echo "Invalid folder option found"
  fi
done
